from math import gcd
from tqdm import tqdm
from sage.all import Zmod, EllipticCurve, factor, factorial, prime_range, next_prime, prod
x1, y1 = (1338, 9218578132576071095213927906233283616907115389852794510465118810355739314264)
x2, y2 = (3454561753909947353764378180794889923919743476068813953002808647958908878895, 17267599534808803050751150297274989016063324917454246976792837120400888025519)


U = x2 * (y1**2 - x1**3) - x1 * (y2**2 - x2**3)
U //= 2**2
U //= 13
U //= 577698866276004745805959
print(U)
exit()
c1 = (y1**2 - x1**3) * pow(x1, -1, U) % U
c2 = (y2**2 - x2**3) * pow(x2, -1, U) % U
assert c1 == c2

#x1, y1 = (1338, 15322209035432720176192723801262917355819965926308815148946129746599464584610)
#x2, y2 = (31802808660877929028632205821736736938396279433692971085813487104245634111761, 10142384545220509147506341084243024598588725207032682348242935360660744754006)
#p_, c_ = (33218736441858779470206429903859842295007646253156703208076802230212751504517, 9377261643153644803800420584006337815723193325974271447214712059617812432452)
#
#a4, t1, t2, t3, t4 = [x[0] for x in factor(p_-1)]
#print(f"{t1, t2, t3, t4 = }")
#
#U = x2 * (y1**2 - x1**3) - x1 * (y2**2 - x2**3)
#U //= gcd(U, factorial(1000))
#
#c1 = (y1**2 - x1**3) * pow(x1, -1, U) % U
#c2 = (y2**2 - x2**3) * pow(x2, -1, U) % U
#assert c1 == c2
#
#a1 = (y1**2 - x1**3 - c1 * x1)
#a2 = (y2**2 - x2**3 - c2 * x2)

e = EllipticCurve(Zmod(U), [c1, 0])

G1 = e(x1, y1)
G2 = e(x2, y2)

G = G1 * 4

pr = []
beg = 2**31
for _ in tqdm(range(100_000_000)):
    pr.append(next_prime(beg))
    beg = pr[-1]
    if pr[-1] > 2**32:
        break

kr = []
for k in tqdm(range(0, len(pr), 8)):
    kr.append(prod(pr[k:k+8]))

for p_ in tqdm(kr):
    G *= p_

